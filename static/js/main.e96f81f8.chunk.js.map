{"version":3,"sources":["index.js","layouts/MainLayout.js","pages/MainPage.js","components/NodeComponent.js","app/store.js","components/AnalyticBoard.js","constants/marvel.js","components/Headers/ConnectButton.js","components/Headers/Header.js","components/Input.js","constants/nftAbi.js","pages/MintNFTPage.js","pages/NFTMarketplacePage.js","serviceWorker.js","constants/config.js","utils/contract.js","app/reducers/walletSlice.js","App.test.js","utils/nftContract.js","constants/rewardManager.js","setupTests.js","utils/util.js","../src sync /^/.*$","assets/img/freya.b02dd9d0.png","App.js","utils/uploader.js","logo.svg"],"names":["ReactDOM","render","StrictMode","store","document","getElementById","serviceWorker","MainLayout","className","path","exact","component","MainPage","MintNFTPage","NFTMarketplacePage","from","to","useState","nodeType","setNodeType","nodeName","setNodeName","nodesArray","setNodesArray","totalNum","setTotalNum","nodesNum","setNodesNum","nfts","setNfts","boosts","setBoosts","connected","useSelector","connectState","walletAddress","connectedAddress","createNode","a","alert","getBalance","nodePrice","createNodeWithTokens","typeNum","tx","console","log","getNFTs","getIdsOfAccount","ids","uris","i","length","getTokenUriById","uri","push","getBoosts","getBoostsOfAccount","getMetadatas","urls","metadatas","axios","get","data","metadata","JSON","parse","getTotalNumOfNodes","getTotalNodeNum","loadNodeTypesInfo","nodeTypes","getNodeType","_nodeType","rewardPerDay","totalRewardReleased","Math","pow","fee","parseInt","loadNodesInfo","nodesInfoArray","getNodesInfo","nodes","floor","name","creationTime","lastClaimTime","paidTime","isAvailable","processNodesInfo","_nodes","timestamp","getTimestamp","boost","rewardAmount","worrier","title","reward","refresh","initilize","claimNode","node","checkClaimable","cashoutNodeReward","payNode","checkPayable","payNodeFee","payAllNodes","_etherAmount","forEach","payAll","claimAllNodes","cashoutAll","React","useLayoutEffect","interval","setInterval","clearInterval","useEffect","result","onClick","type","nodesLength","totalNodes","address","map","imgPath","nft","placeholder","onChange","e","target","value","max","toFixed","calDateFromSeconds","NodeComponent","props","nftImages","setNftImages","images","alt","src","require","default","nftImage","url","configureStore","reducer","wallet","walletReducer","middleware","getDefaultMiddleware","serializableCheck","AnalyticBoard","claimNodeType","calNodeTypeReward","cashoutNodeTypeReward","payNodeType","payNodeTypeFee","limitNumOfNodes","MarvelABI","ConnectButton","setWallet","balance","setBalance","dispatch","useDispatch","connectWalletHandler","useCallback","window","ethereum","on","accounts","setConnected","toString","disconnectWalletHandler","networkId","request","method","chainId","disconnected","substring","Header","Input","disabled","NFTAbi","undefined","fileSelected","setFileSelected","setPrice","description","setDescription","setBoost","x","setX","y","setY","uploadFile","uploadToIPFS","IpfsHash","onMint","getCurrentID","currentID","uploadJson","stringify","jsonUrl","mintNFT","for","id","accept","style","display","multiple","fileList","files","marketItems","intializeMarketItems","getMarketItems","item","marketItem","owner","price","tokenId","sold","approveToken","approve","isLocalhost","Boolean","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","status","indexOf","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","contractAddress","nftAddress","rpcUrl","pinataApiKey","pinataSecretApiKey","payDeadline","web3","Web3","providers","HttpProvider","getContract","abiData","abi","eth","Contract","contract","dataABI","methods","utils","toWei","encodeABI","signTransaction","txHash","balanceOf","call","getTotalCreatedNodes","totalNodeNum","rawResponse","split","cashoutReward","nodeTypeNum","transactionParameters","gasLimit","params","walletSlice","createSlice","initialState","connection","reducers","action","payload","setConnection","getConnection","actions","test","getByText","expect","toBeInTheDocument","nftContract","getUnsoldItems","items","tokenURI","account","getIdsOfAddress","getCurrentTokenID","buyNFT","signTransactionNFT","sellNFT","metaDataUri","RewardManagerABI","Date","now","duration","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports","App","file","fd","FormData","append","fileName","keyvalues","pinataOptions","cidVersion","post","maxBodyLength","_boundary","pinata_api_key","pinata_secret_api_key","jsonName","dataStr","File"],"mappings":"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","file":"static/js/main.e96f81f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"assets/styles/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <Router> \r\n                <App />\r\n            </Router>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport MainPage from \"pages/MainPage.js\";\r\nimport MintNFTPage from \"pages/MintNFTPage\";\r\nimport Header from \"components/Headers/Header\";\r\nimport NFTMarketplacePage from \"pages/NFTMarketplacePage\";\r\n\r\nexport default function MainLayout() {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        {/* <AdminNavbar /> */}\r\n        {/* Header */}\r\n        <Header />\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/main/\" exact component={MainPage} />\r\n            <Route path=\"/mint/\" exact component={MintNFTPage} />\r\n            <Route path=\"/marketplace/\" exact component={NFTMarketplacePage} />\r\n            <Redirect from=\"/\" to=\"/marketplace/\" />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport NodeComponent from \"../components/NodeComponent\";\r\nimport AnalyticBoard from \"../components/AnalyticBoard\";\r\nimport Input from \"../components/Input\";\r\nimport { nodeTypes, payDeadline } from \"../constants/config\";\r\nimport { \r\n    getBalance,\r\n    createNodeWithTokens, \r\n    getNodesInfo, \r\n    getNodeType, \r\n    getTotalNodeNum,\r\n    cashoutAll,\r\n    cashoutNodeReward,\r\n    payNodeFee,\r\n    payAll\r\n} from \"../utils/contract\";\r\nimport {\r\n    getIdsOfAccount,\r\n    getTokenUriById,\r\n    getBoostsOfAccount\r\n} from \"../utils/nftContract\";\r\nimport { getTimestamp, calDateFromSeconds, checkPayable, checkClaimable } from \"../utils/util\";\r\nimport { connectState, connectedAddress } from \"app/reducers/walletSlice\";\r\nimport { useSelector } from 'react-redux';\r\nimport axios from \"axios\";\r\n\r\nexport default function MainPage() {\r\n    const [nodeType, setNodeType] = useState({});     // selected Node type\r\n    const [nodeName, setNodeName] = useState(\"\");     // Name of creating node\r\n    const [nodesArray, setNodesArray] = useState([]); // nodes info owned by account\r\n    const [totalNum, setTotalNum] = useState(0);      // total number of created nodes\r\n    const [nodesNum, setNodesNum] = useState(0);      // number of nodes owned by account\r\n    const [nfts, setNfts] = useState([]);\r\n    const [boosts, setBoosts] = useState([]);\r\n\r\n    const connected = useSelector(connectState);\r\n    const walletAddress = useSelector(connectedAddress);\r\n\r\n    const createNode = async () => {\r\n        if (!connected) {\r\n            alert(\"Connect wallet\");\r\n            return;\r\n        }\r\n        let balance = await getBalance(walletAddress);\r\n        // check account has enough token balance to create node\r\n        if ( balance >  nodeType.nodePrice) {\r\n            let tx = await createNodeWithTokens(walletAddress, nodeType.typeNum, nodeName);\r\n            console.log(tx);\r\n        } else {\r\n            alert(\"You don't have enough balance\");\r\n        }\r\n    }\r\n\r\n    //get nfts owned by this account\r\n    const getNFTs = async () =>{ \r\n        let ids = await getIdsOfAccount(walletAddress);\r\n        var uris = [];\r\n        for(let i=0; i<ids.length; i++) {\r\n            let uri = await getTokenUriById(ids[i]);\r\n            uris.push(uri);\r\n        }\r\n        \r\n        return uris;\r\n    }\r\n\r\n    // get boost of node types for connected account\r\n    const getBoosts = async () => {\r\n        let boosts = await getBoostsOfAccount(walletAddress);\r\n        setBoosts(boosts);\r\n        console.log(boosts);\r\n        return boosts;\r\n    }\r\n\r\n    //get metadata of nfts from pinata\r\n    const getMetadatas = async (urls) => {\r\n        let metadatas = [];\r\n\r\n        for(let i=0; i<urls.length; i++) {\r\n            try {\r\n                let data = await axios.get(\"https://gateway.pinata.cloud/ipfs/\" + urls[i]);\r\n                let metadata = JSON.parse(data.data);\r\n                console.log(metadata)\r\n                metadatas.push(metadata);\r\n            } catch(error) {console.log(error);}\r\n        }\r\n        return metadatas;\r\n    }\r\n\r\n    // get number of all nodes\r\n    const getTotalNumOfNodes = async () => {\r\n        let totalNum = await getTotalNodeNum();\r\n        setTotalNum(totalNum);\r\n    }\r\n\r\n    // get node types info from smart contract(node type number, reward per day, total released)\r\n    const loadNodeTypesInfo = async () => {\r\n        for(let i=0; i < nodeTypes.length; i++) {\r\n            let _nodeType = await getNodeType(nodeTypes[i].typeNum);\r\n            nodeTypes[i].nodePrice = _nodeType.nodePrice;\r\n            nodeTypes[i].rewardPerDay = _nodeType.rewardPerDay;\r\n            nodeTypes[i].totalRewardReleased = _nodeType.totalRewardReleased / Math.pow(10, 18);\r\n            nodeTypes[i].fee = parseInt(_nodeType.fee);\r\n        }\r\n    }\r\n    \r\n    // get nodes information owned by account from smart contract\r\n    // the return value of smart contract is one string so split string using #\r\n    const loadNodesInfo = async () => {\r\n         let nodesInfoArray = [];\r\n        try {\r\n            nodesInfoArray = await getNodesInfo(walletAddress);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n        let nodes = [];\r\n        for (let i=0; i<Math.floor(nodesInfoArray.length/6); i++) {\r\n            nodes.push({\r\n                name: nodesInfoArray[6*i+1],\r\n                typeNum: nodesInfoArray[6*i+2],\r\n                creationTime: nodesInfoArray[6*i+3],\r\n                lastClaimTime: nodesInfoArray[6*i+4],\r\n                paidTime: nodesInfoArray[6*i+5],\r\n                isAvailable: nodesInfoArray[6*i+6],\r\n            });\r\n        }\r\n        processNodesInfo(nodes);\r\n    }\r\n\r\n    // create nodes for showing in table\r\n    const processNodesInfo = (_nodes) => {\r\n        let nodes = [];\r\n        let timestamp = getTimestamp();\r\n        for(let i=0; i < _nodes.length; i++){\r\n            let typeNum = parseInt(_nodes[i].typeNum) - 1;\r\n            let boost = 100;\r\n            if (typeNum<boosts.length) boost += parseInt(boosts[typeNum]);\r\n            let rewardAmount = (timestamp - _nodes[i].lastClaimTime) * ((parseInt(nodeTypes[typeNum].rewardPerDay) * boost) / 86400) / Math.pow(10, 18);\r\n            console.log(rewardAmount);\r\n            nodes.push({\r\n                name: _nodes[i].name,\r\n                worrier: nodeTypes[typeNum].title,\r\n                reward: rewardAmount,\r\n                creationTime: _nodes[i].creationTime,\r\n                paidTime: _nodes[i].paidTime,\r\n                isAvailable: _nodes[i].isAvailable,\r\n                fee: nodeTypes[typeNum].fee,\r\n            });\r\n        }\r\n        setNodesNum(nodes.length);\r\n        setNodesArray(nodes);\r\n    }\r\n    \r\n    // Refresh page with updated nodes info, node types, total node num\r\n    const refresh = async () => {\r\n        await getTotalNumOfNodes();\r\n        await loadNodeTypesInfo();\r\n        await loadNodesInfo();\r\n    }\r\n\r\n    const initilize =  async () => {\r\n        await getTotalNumOfNodes();\r\n        await loadNodeTypesInfo();\r\n        await loadNodesInfo();\r\n        console.log(walletAddress);\r\n    };\r\n\r\n    // claim reward of node created at specific time\r\n    const claimNode = async (node) => {\r\n        if (checkClaimable(node)) {\r\n            let tx = await cashoutNodeReward(walletAddress, node.creationTime);\r\n            console.log(tx);\r\n        } else {\r\n            alert(\"You can't claim this node\");\r\n        }\r\n    }\r\n    // pay fee of node created at specific time\r\n    const payNode = async (node) => {\r\n        if (checkPayable(node)) {\r\n            let tx = await payNodeFee(walletAddress, node.creationTime, node.fee);\r\n            console.log(tx);\r\n        } else {\r\n            alert(\"You can't pay\");\r\n        }\r\n    }\r\n\r\n    // pay fees of all nodes owned by account\r\n    const payAllNodes = async () => {\r\n        let _etherAmount = 0;\r\n        \r\n        nodesArray.forEach((node) => {\r\n            if (checkPayable(node)) _etherAmount+=node.fee;\r\n        });\r\n        if (_etherAmount > 0) {\r\n            let tx = await payAll(walletAddress, _etherAmount);\r\n            console.log(tx); \r\n        } else {\r\n            alert(\"You don't have nothing to pay\");\r\n        }\r\n    }\r\n    // claim rewards of all nodes owned by account\r\n    const claimAllNodes = async () => {\r\n        let _etherAmount = 0;        \r\n        nodesArray.forEach((node) => {\r\n            if (checkClaimable(node)) _etherAmount+=node.fee;\r\n        });\r\n        if (_etherAmount > 0) {\r\n            let tx = await cashoutAll(walletAddress);\r\n            console.log(tx);\r\n        } else {\r\n            alert(\"You don't have nothing to claim\");\r\n        }\r\n    }\r\n\r\n    React.useLayoutEffect(()=> {\r\n        if (connected) {\r\n            // await initilize(); // To reduce 5 secs\r\n            const interval = setInterval(async () => {\r\n                await initilize();\r\n            }, 5000);\r\n            return () => clearInterval(interval);\r\n        } else {\r\n            setNodesNum(0);\r\n            setNodesArray([]);\r\n        }\r\n    }, [connected, walletAddress])\r\n\r\n    // Reload page when connected, address of store are changed\r\n    useEffect(async () => {\r\n        if (connected) {\r\n            // get boosts\r\n            let boosts = await getBoosts();\r\n            await initilize(boosts); // To reduce 5 secs\r\n            // get nfts and its metadata\r\n            let result = await getNFTs();\r\n            let metadatas = await getMetadatas(result);\r\n            setNfts(metadatas);\r\n        }\r\n    }, [connected, walletAddress]);\r\n    \r\n    return (\r\n        <>\r\n            <div>\r\n                {/* Refresh button */}\r\n                <div>\r\n                    <button onClick={refresh} type=\"button\" className=\"btn btn-dark\">\r\n                        Refresh\r\n                    </button>\r\n                </div>\r\n                {/* Board for total node num, total released and claimable rewards per node type */}\r\n                <AnalyticBoard \r\n                    nodesLength={nodesNum}\r\n                    nodeTypes={nodeTypes}\r\n                    totalNodes={totalNum}\r\n                    nodes={nodesArray}\r\n                    address={walletAddress}\r\n                />\r\n                {/* Showing Node types */}\r\n                <div className=\"d-flex justify-content-between\" >\r\n                    {nodeTypes.map((nodeType, i) => (\r\n                        <div key={i} onClick={() => setNodeType(nodeType)}>\r\n                            <NodeComponent \r\n                                key={i}\r\n                                nodeType={nodeType} \r\n                                path={nodeType.imgPath}\r\n                                nft={nfts}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {/* Creating new node */}\r\n                <div className=\"mt-4\">\r\n                    <Input\r\n                        placeholder={\"Name your Node\"}\r\n                        onChange={e => setNodeName(e.target.value)}\r\n                    />\r\n                    <div className=\"mt-3\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={createNode}>Create Node</button>\r\n                    </div>\r\n                </div>\r\n                {/* Claim all button */}\r\n                <button onClick={claimAllNodes} type=\"button\" className=\"mt-4 btn btn-dark\">\r\n                    Claim All\r\n                </button>\r\n                <button onClick={() => payAllNodes()} type=\"button\" className=\"mt-4 btn btn-dark\">\r\n                    Pay All\r\n                </button>\r\n                {/* Table for showing all nodes owned by account */}\r\n                <table className=\"mt-4 table table-dark table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>My Nodes</th>\r\n                        <th>Worrior</th>\r\n                        <th>RPC</th>\r\n                        <th>Rewards</th>\r\n                        <th>Deadline To Pay Fee</th>\r\n                        <td>Pay</td>\r\n                        <td>Cash Out</td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {nodesArray.map((node, i) => (\r\n                            <tr key={i}>\r\n                                <td>{node.name}</td>\r\n                                <td>{node.worrier}</td>\r\n                                <td>-</td>\r\n                                <td>{Math.max(node.reward, 0).toFixed(10)}</td>\r\n                                <td>{node.isAvailable==\"1\"? calDateFromSeconds(node.paidTime - getTimestamp()) : \"Not Available\" }</td>\r\n                                <td>            \r\n                                    <button onClick={() => payNode(node)} type=\"button\" className=\"btn btn-dark\">\r\n                                        Pay\r\n                                    </button>\r\n                                </td>\r\n                                <td>            \r\n                                    <button onClick={() => claimNode(node)} type=\"button\" className=\"btn btn-dark\">\r\n                                        Claim\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\n\r\nexport default function NodeComponent(props) {\r\n  const {nodeType, nft, path} = props;\r\n  const [nftImages, setNftImages] = useState([]);\r\n\r\n  React.useEffect(async ()=> {\r\n    console.log(nft, \"props\", nodeType.typeNum);\r\n    let images = [];\r\n    for(let i=0; i<nft.length; i++) {\r\n        if (nft[i].nodeType==nodeType.typeNum) {\r\n            images.push(nft[i]);\r\n        }\r\n    }\r\n    setNftImages(images);\r\n  }, [props.nft]); // [] shouldn't be used here !!! important\r\n\r\n  return (\r\n        <>\r\n            {/* Node type component */}\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <img\r\n                        className=\"node-image\"\r\n                        alt=\"...\"\r\n                        src={require(`../${path}`).default}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    {nftImages.map((nftImage, i) => {\r\n                        return (\r\n                            <img\r\n                                key={i}\r\n                                className=\"node-image\"\r\n                                alt=\"...\"\r\n                                src={nftImage.url}\r\n                            />\r\n                        )\r\n                    })}\r\n                    </div>\r\n                <div className=\"card-footer\">{nodeType.title}</div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport walletReducer from './reducers/walletSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    wallet: walletReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: false\r\n  }),\r\n});\r\n","import React from \"react\";\r\nimport { cashoutNodeTypeReward, payNodeTypeFee } from \"../utils/contract\";\r\nimport { limitNumOfNodes } from \"constants/config\";\r\nimport { calDateFromSeconds, getTimestamp, checkPayable, checkClaimable } from \"utils/util\";\r\n\r\nexport default function AnalyticBoard(props) {\r\n\r\n    // claim per node type\r\n    const claimNodeType = async (address, nodeType) => {\r\n        if (calNodeTypeReward(nodeType) >0 ) {\r\n            let tx = await cashoutNodeTypeReward(address, nodeType.typeNum);\r\n            console.log(tx);\r\n        } else {\r\n            alert(\"You don't have nothing to claim\");\r\n        }\r\n    }\r\n\r\n    // Pay fees of nodes belong to node type\r\n    const payNodeType = async (address, nodeType) => {\r\n        let _etherAmount = 0;\r\n        \r\n        props.nodes.forEach((node) => {\r\n            if (checkPayable(node) && node.worrier == nodeType.title) _etherAmount+=node.fee;\r\n        });\r\n        if (_etherAmount > 0) {\r\n            let tx = await payNodeTypeFee(address, nodeType.typeNum, _etherAmount);\r\n            console.log(tx); \r\n        } else {\r\n            alert(\"You don't have nothing to pay\");\r\n        }\r\n    }\r\n\r\n    // add up node rewards per node type\r\n    const calNodeTypeReward = (nodeType) => {\r\n        let reward = 0;\r\n        props.nodes.forEach((node) => {\r\n            if (node.worrier === nodeType.title && checkClaimable(node))\r\n                reward += node.reward;\r\n        });\r\n        return reward.toFixed(5);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        {/* My node ccount and total number of created nodes */}\r\n                        <div className=\"col-6\">\r\n                            <div>My Nodes: {props.nodesLength}/{limitNumOfNodes}</div>\r\n                            <div>Total Nodes: {props.totalNodes}</div>\r\n                            <div>\r\n                                {props.nodeTypes.map((nodeType, i) => (\r\n                                    <div key={i}>\r\n                                        {nodeType.title} : {nodeType.totalRewardReleased}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        {/* Amount of added rewards per node type */}\r\n                        <div className=\"col-6\">\r\n                            <h2>Rewards</h2>\r\n                            <div>\r\n                                {props.nodeTypes.map((nodeType, i) => (\r\n                                    <div key={i}>\r\n                                        {nodeType.title} : {calNodeTypeReward(nodeType)}---\r\n                                        <button onClick={() => claimNodeType(props.address, nodeType)} type=\"button\" className=\"btn btn-sm btn-dark\">Claim</button>\r\n                                        <button onClick={() => payNodeType(props.address, nodeType)} type=\"button\" className=\"btn btn-sm btn-dark\">Pay Fee</button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","export const MarvelABI = [{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"payees\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newLiquidityWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldLiquidityWallet\",\"type\":\"address\"}],\"name\":\"LiquidityWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"PayeeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"SetAutomatedMarketMakerPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiqudity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"UpdateUniswapV2Router\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nodePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"addNewNodeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"automatedMarketMakerPairs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"blacklistMalicious\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"boostReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cashoutAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cashoutFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"}],\"name\":\"cashoutNodeTypeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"cashoutReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTime\",\"type\":\"uint256\"}],\"name\":\"changeClaimTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"changeNodeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nodePrice\",\"type\":\"uint256\"}],\"name\":\"changeNodePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"}],\"name\":\"changeNodeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nodePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"}],\"name\":\"changeNodeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newVal\",\"type\":\"bool\"}],\"name\":\"changeSwapLiquify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"createNodeWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributionPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futurFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futurUsePool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNodeNumberOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"}],\"name\":\"getNodeType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nodePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewardReleased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNodesCreatime\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNodesInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNodesLastClaims\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRewardAmountOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalCreatedNodes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityPoolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payAll\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_creationTime\",\"type\":\"uint256\"}],\"name\":\"payNodeFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"}],\"name\":\"payNodeTypeFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"payee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"}],\"name\":\"removeNodeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardManager\",\"outputs\":[{\"internalType\":\"contract RewardManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setAutomatedMarketMakerPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeManagement\",\"type\":\"address\"}],\"name\":\"setNodeManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTokensAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totalReleased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReleased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IJoeRouter02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateCashoutFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateFuturFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"wall\",\"type\":\"address\"}],\"name\":\"updateFuturWall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateLiquiditFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateRewardsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"wall\",\"type\":\"address\"}],\"name\":\"updateRewardsWall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateRwSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVal\",\"type\":\"uint256\"}],\"name\":\"updateSwapTokensAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateUniswapV2Router\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","import { useEffect, useState, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    setConnected,\r\n    connectState,\r\n    connectedAddress, \r\n    disconnected,\r\n} from '../../app/reducers/walletSlice';\r\nimport { getBalance } from 'utils/contract';\r\n\r\n\r\nfunction ConnectButton() {\r\n    const [wallet, setWallet] = useState(\"0x0\");\r\n    const [balance, setBalance] = useState(0);\r\n\r\n    const connected = useSelector(connectState);\r\n    const walletAddress = useSelector(connectedAddress);\r\n    const dispatch = useDispatch();\r\n\r\n    const checkWalletIsInstalled = () => {\r\n        const { ethereum } = window;\r\n\r\n        if (!ethereum) {\r\n            alert(\"Install MetaMask\");\r\n            return;\r\n        } else {\r\n            console.log(\"Ready to go\");\r\n        }\r\n    }\r\n\r\n    const connectWalletHandler = useCallback(async () => {\r\n        const { ethereum } = window;\r\n        \r\n        ethereum.on('accountsChanged', async function (accounts) {\r\n            let wallet = accounts[0];\r\n            if (wallet) {\r\n                let balance = await getBalance(wallet);\r\n                setBalance(balance); //set balance of token to balance variable\r\n                setWallet(wallet); // set connected wallet address\r\n                dispatch(setConnected(wallet.toString())) // update connected, address of store\r\n            } else { \r\n                // if disconnect account on metamask, disconnect account(set connected to false of store)\r\n                await disconnectWalletHandler(); \r\n            }\r\n        });\r\n        ethereum.on('networkChanged', async function (networkId) {\r\n            // if connected chain is not avalanche fuji test net, disconnect wallet\r\n            if(networkId !== '0xa869') {\r\n                disconnectWalletHandler();\r\n            }\r\n        })\r\n          \r\n\r\n        try {\r\n            // request connect one account of metamask to current website\r\n            const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\r\n            // get connected chain id\r\n            const chainId = await window.ethereum.request({ method: 'eth_chainId'});\r\n            console.log(chainId);\r\n\r\n            if(chainId === '0xa869') {\r\n                let wallet = accounts[0];\r\n                let balance = await getBalance(wallet);\r\n                setBalance(balance);\r\n                setWallet(wallet);\r\n                dispatch(setConnected(wallet.toString()))\r\n            } else {\r\n                alert(\"Connect to Avalanche Testnet\");\r\n                dispatch(disconnected());   \r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }, [connected, dispatch]);\r\n\r\n    const disconnectWalletHandler = () => {\r\n        setWallet('0x0');\r\n        dispatch(disconnected()); // update connected of store to false\r\n    }\r\n\r\n    const connectWalletButton = () => {\r\n        return (\r\n            <button onClick={connectWalletHandler} type=\"button\" className=\"btn btn-dark\">\r\n                Connect Wallet\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const disconnectWalletButton = () => {\r\n        // this is displayed after wallet is connected to site\r\n        return (\r\n            <div>\r\n                <button type=\"button\" className=\"mr-2 btn btn-dark\">\r\n                    {(balance/1000000000000000000).toFixed(2)}\r\n                </button>\r\n                <button type=\"button\" className=\"mr-2 btn btn-dark\">\r\n                    {wallet.substring(0, 6)}...{wallet.substring(38, 42)} \r\n                </button>\r\n                <button onClick={disconnectWalletHandler} type=\"button\" className=\"btn btn-dark\">\r\n                    Disconnect Wallet\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n  \r\n    useEffect(async () => {\r\n        checkWalletIsInstalled();\r\n        // checking balance of account in every 10 seconds\r\n        const interval = setInterval(async () => {\r\n            try {\r\n                let balance = await getBalance(walletAddress);\r\n                setBalance(balance);\r\n            } catch(error) {\r\n            }\r\n            \r\n        }, 10000);\r\n        \r\n        return () => clearInterval(interval);\r\n    }, [walletAddress])\r\n\r\n    return (\r\n        <div>\r\n            {!connected ? connectWalletButton() : disconnectWalletButton()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConnectButton;","import React from \"react\";\r\nimport ConnectButton from \"./ConnectButton\";\r\n\r\nexport default function Header() {\r\n  return (\r\n        <>\r\n            {/* Header */}\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <h1>Thor Financial</h1>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"float-right\">\r\n                        <ConnectButton />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nconst Input = ({ placeholder, onChange, disabled}) => {\r\n    return <input onChange={onChange} placeholder={placeholder} disabled={disabled}/>\r\n};\r\n\r\nexport default Input","export const NFTAbi = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ApprovalForAll\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"buyNFT\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"metadataURI\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"nodeType\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"boost\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"mintNFT\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"nodeType\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"boost\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"NFTMinted\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"renounceOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"_data\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"sellNFT\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setApprovalForAll\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"baseURI\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setBaseURI\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setMarvelToken\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setMaximumNum\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"baseTokenURI\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getApproved\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"account\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getBoostsOfAccount\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getCurrentTokenID\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"account\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getIdsOfAddress\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getItem\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\t\t\"type\": \"address\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"nodeType\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"boost\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\t\t\"name\": \"sold\",\r\n\t\t\t\t\t\t\"type\": \"bool\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct Temp.MarketItem\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getMaximumNum\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getUnsoldItems\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\t\t\"type\": \"address\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"nodeType\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"boost\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\t\t\"name\": \"sold\",\r\n\t\t\t\t\t\t\"type\": \"bool\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct Temp.MarketItem[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isApprovedForAll\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"marvel\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"contract IERC20\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"maximumNum\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"numOfNodeTypes\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ownerOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes4\",\r\n\t\t\t\t\"name\": \"interfaceId\",\r\n\t\t\t\t\"type\": \"bytes4\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"supportsInterface\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"symbol\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenURI\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];","import React, {useEffect} from \"react\";\r\nimport { uploadJson, uploadToIPFS } from \"utils/uploader\";\r\nimport { mintNFT } from \"utils/nftContract\";\r\nimport { useSelector } from 'react-redux';\r\nimport { connectState, connectedAddress } from \"app/reducers/walletSlice\";\r\nimport { getCurrentID } from \"utils/nftContract\";\r\n\r\nexport default function MintNFTPage() {\r\n\r\n    const [fileSelected, setFileSelected] = React.useState(undefined);\r\n    const [nodeType, setNodeType] = React.useState(0);\r\n    const [price, setPrice] = React.useState(0);\r\n    const [description, setDescription] = React.useState(\"\");\r\n    const [boost, setBoost] = React.useState(0);\r\n    const [x, setX] = React.useState(0);\r\n    const [y, setY] = React.useState(0);\r\n\r\n    const connected = useSelector(connectState);\r\n    const walletAddress = useSelector(connectedAddress);\r\n    const baseUri = \"https://gateway.pinata.cloud/ipfs/\"; \r\n\r\n    useEffect(async() => {\r\n        // let data = {\r\n        //     url: \"ddddd\"\r\n        // };\r\n        // let url = await uploadJson(data, \"test\");\r\n        // console.log(url, \"mint url\");\r\n    },  []);\r\n\r\n    const handleImageChange = function (e) {\r\n        const fileList = e.target.files;\r\n    \r\n        if (!fileList) return;\r\n        \r\n        setFileSelected(fileList[0]);\r\n      };\r\n    \r\n\r\n    const uploadFile = async (e) => {\r\n        if (fileSelected) {\r\n            // const formData = new FormData();\r\n            // formData.append(\"image\", fileSelected, fileSelected.name);\r\n            let url = await uploadToIPFS(fileSelected, fileSelected.name);\r\n            console.log(fileSelected.name, url);\r\n            return baseUri + url.data.IpfsHash;\r\n        }\r\n    }\r\n\r\n    const onMint = async (e) => {\r\n        if (!connected) {\r\n            alert(\"Connect wallet\");\r\n            return;\r\n        }\r\n        if (!fileSelected) {\r\n            alert(\"please select image\");\r\n        }\r\n        let url = await uploadFile();\r\n        let data = {\r\n            description: description,\r\n            nodeType: nodeType,\r\n            boost: boost,\r\n            x: x,\r\n            y: y,\r\n            url: url\r\n        };\r\n\r\n        let currentID = await getCurrentID();\r\n        let jsonUrl = await uploadJson(JSON.stringify(data), \"nftImage\" + (currentID + 1));\r\n        console.log(jsonUrl);\r\n\r\n        let tx = await mintNFT( walletAddress, jsonUrl.data.IpfsHash, 100000000000, 1, boost );\r\n\r\n        console.log(data, tx);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <div>\r\n                    <label for=\"fname\">Description:</label><br/>\r\n                    <input type=\"text\" id=\"fname\" name=\"description\" onChange={e => {setDescription(e.target.value)}}/><br/>\r\n                    <label for=\"lname\">NodeType:</label><br />\r\n                    <input type=\"number\" id=\"lname\" name=\"nodeType\" onChange={e => {setNodeType(e.target.value)}}/><br/>\r\n                    <label for=\"lname\">Price:</label><br />\r\n                    <input type=\"number\" id=\"lname\" name=\"nodeType\" onChange={e => {setPrice(e.target.value)}}/><br/>\r\n                    <label for=\"lname\">Boost:</label><br />\r\n                    <input type=\"number\" id=\"lname\" name=\"boost\" onChange={e => {setBoost(e.target.value)}}/><br/>\r\n                    <label for=\"lname\">X:</label><br />\r\n                    <input type=\"number\" id=\"lname\" name=\"x\" onChange={e => {setX(e.target.value)}}/><br/>\r\n                    <label for=\"lname\">Y:</label><br />\r\n                    <input type=\"number\" id=\"lname\" name=\"y\" onChange={e => {setY(e.target.value)}}/><br/><br/>\r\n\r\n                </div> \r\n                <label>\r\n                    <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: \"none\" }}\r\n                    id=\"photo\"\r\n                    name=\"photo\"\r\n                    type=\"file\"\r\n                    multiple={false}\r\n                    onChange={handleImageChange}\r\n                    />\r\n\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-secondary\"\r\n                    onClick={uploadFile}\r\n                    >\r\n                    Upload Picture\r\n                    </button>\r\n                </label>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-secondary\"\r\n                    onClick={onMint}\r\n                    >\r\n                    Mint NFT\r\n                </button>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport { uploadJson, uploadToIPFS } from \"utils/uploader\";\r\nimport { \r\n    buyNFT, \r\n    getMarketItems, \r\n    getTokenUriById, \r\n    sellNFT \r\n} from \"utils/nftContract\";\r\nimport { approve } from \"utils/contract\";\r\nimport { useSelector } from 'react-redux';\r\nimport { connectState, connectedAddress } from \"app/reducers/walletSlice\";\r\n\r\nexport default function NFTMarketplacePage() {\r\n\r\n    const connected = useSelector(connectState);\r\n    const walletAddress = useSelector(connectedAddress);\r\n\r\n    const marketItems = [];\r\n\r\n    const intializeMarketItems = async () => {\r\n        let items = await getMarketItems();\r\n        \r\n        items.forEach(async (item) => {\r\n            let uri = await getTokenUriById(item[4]);\r\n            let marketItem = {\r\n                owner: item[0],\r\n                price: item[1],\r\n                nodeType: item[2],\r\n                boost: item[3],\r\n                tokenId: item[4],\r\n                sold: item[5],\r\n                uri: uri\r\n            };\r\n            marketItems.push(marketItem);\r\n        });\r\n    \r\n        console.log(marketItems, \"mateket itmes\");\r\n    }\r\n\r\n    const buyNFTFromMarketplace = async (id) => {\r\n        if (!connected) {\r\n            alert(\"Connect wallet\");\r\n            return;\r\n        }\r\n        let tx = await buyNFT(walletAddress, id);\r\n        console.log(tx); \r\n    }\r\n\r\n    const sellNFTToMarketplace = async (id) => {\r\n        if (!connected) {\r\n            alert(\"Connect wallet\");\r\n            return;\r\n        }\r\n        let tx = await sellNFT(walletAddress, id);\r\n        console.log(tx); \r\n    }\r\n\r\n    const approveToken = async () => {\r\n        if (!connected) {\r\n            alert(\"Connect wallet\");\r\n            return;\r\n        }\r\n        await approve(walletAddress);\r\n    }\r\n\r\n    useEffect(async() => {\r\n        await intializeMarketItems();\r\n        // await buyNFTFromMarketplace(1);\r\n        await approveToken();\r\n    },  [walletAddress]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// export const contractAddress = '0xdb87e8d95570582a5687749C406b2b9040500c02';\r\n// export const contractAddress = '0x61B631dFb8e6eB42C05f73BBf274688D2bd38951';\r\nexport const contractAddress = '0x382E6E5c8edBAcEeEFB02A3038c46FaBC6BBBC4b';\r\nexport const nftAddress = '0x1FeE3daaB4A6545d508B2c7A1EC2566e6182D8E7';\r\nexport const rpcUrl = 'https://api.avax-test.network/ext/bc/C/rpc';\r\n// export const rpcUrl = 'https://api.avax-test.network/ext/bc/C/rpc';\r\n// export const rpcUrl = 'https://data-seed-prebsc-1-s1.binance.org:8545/';\r\nexport const pinataApiKey = '6a5e06af53f751b23f58';\r\nexport const pinataSecretApiKey = 'd8490fda64b681c69ef14deb22aa4822579ef58efc5cef2b0edf260353b9df2f';\r\n\r\nexport const limitNumOfNodes = 100;\r\nexport const payDeadline = 400;\r\nexport const nodeTypes = [\r\n    {\r\n        typeNum: 1,\r\n        title: \"HEIMDALL\",\r\n        imgPath: \"assets/img/freya.b02dd9d0.png\"\r\n    },\r\n    {\r\n        typeNum: 2,\r\n        title: \"FREYA\",\r\n        imgPath: \"assets/img/freya.b02dd9d0.png\"\r\n    },\r\n    {\r\n        typeNum: 3,\r\n        title: \"THOR\",\r\n        imgPath: \"assets/img/freya.b02dd9d0.png\"\r\n    },\r\n    {\r\n        typeNum: 4,\r\n        title: \"ODIN\",\r\n        imgPath: \"assets/img/freya.b02dd9d0.png\"\r\n    },\r\n]","import Web3 from 'web3';\r\nimport { MarvelABI } from '../constants/marvel';\r\nimport { rpcUrl, contractAddress } from \"../constants/config\";\r\n\r\nconst web3 = new Web3(new Web3.providers.HttpProvider(rpcUrl));\r\n// get smart contract interface using web3\r\nexport const getContract = (abiData, address) => {\r\n    const abi = abiData;\r\n    let contract = new web3.eth.Contract(abi , address);\r\n    return contract;\r\n}\r\n\r\nconst splitString = (str) => {\r\n    return str.split(\"#\");\r\n}\r\n\r\nconst contract = getContract(MarvelABI, contractAddress);\r\n\r\n// approve marvel token to marvel token contract address\r\nexport const approve = async (wallet) => {\r\n    var price = '1000000000000000000000';\r\n    // let amount = parseInt();\r\n    try{\r\n        let dataABI = contract.methods.approve(contractAddress, web3.utils.toWei(price, \"ether\")).encodeABI();\r\n        let txHash = await signTransaction(wallet, dataABI, 0);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\n// get balance of token\r\nexport const getBalance = async (address) => {\r\n    let balance =await contract.methods.balanceOf(address).call();\r\n    return balance;\r\n}\r\n\r\n// get total number of created nodes\r\nexport const getTotalNodeNum = async () => {\r\n    let totalNodeNum =await contract.methods.getTotalCreatedNodes().call();\r\n    return totalNodeNum;\r\n}\r\n\r\n// load nodes info from smart contract\r\n// return of smart contract is one string so split it using #\r\nexport const getNodesInfo = async (address) => {\r\n    let rawResponse = await contract.methods.getNodesInfo(address).call();\r\n    return splitString(rawResponse);\r\n}\r\n\r\n// get node type info(price, reward per day, total released)\r\nexport const getNodeType = async (typeNum) => {\r\n    let rawResponse = await contract.methods.getNodeType(typeNum).call();\r\n    return rawResponse;\r\n}\r\n\r\n// Create node with tokens\r\nexport const createNodeWithTokens = async (address, typeNum, name) => {\r\n    try{\r\n        let dataABI = contract.methods.createNodeWithTokens(typeNum, name).encodeABI();\r\n        let txHash = await signTransaction(address, dataABI, 0);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\n// claim rewards of one node\r\nexport const cashoutNodeReward = async (address, creationTime) => {\r\n    try{\r\n        let dataABI = contract.methods.cashoutReward(creationTime).encodeABI();\r\n        let txHash = await signTransaction(address, dataABI, 0);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\n// claim rewards of all nodes owned by account\r\nexport const cashoutAll = async (address) => {\r\n    try{\r\n        let dataABI = contract.methods.cashoutAll().encodeABI();\r\n        let txHash = await signTransaction(address, dataABI, 0);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\n// claim rewards of nodes belong to specific node type\r\nexport const cashoutNodeTypeReward = async (address, nodeTypeNum) => {\r\n    try{\r\n        let dataABI = contract.methods.cashoutNodeTypeReward(nodeTypeNum).encodeABI();\r\n        let txHash = await signTransaction(address, dataABI, 0);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n} \r\n\r\n// pay fees of one node\r\nexport const payNodeFee = async (address, creationTime, _etherAmount) => {\r\n    console.log(_etherAmount);\r\n    try{\r\n        let dataABI = contract.methods.payNodeFee(creationTime).encodeABI();\r\n        console.log(dataABI)\r\n        let txHash = await signTransaction(address, dataABI, _etherAmount);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\n// pay fees of all nodes owned by account\r\nexport const payAll = async (address, _etherAmount) => {\r\n    try{\r\n        let dataABI = contract.methods.payAll().encodeABI();\r\n        let txHash = await signTransaction(address, dataABI, _etherAmount);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\n// pay fees of nodes belong to specific node type\r\nexport const payNodeTypeFee = async (address, nodeTypeNum, _etherAmount) => {\r\n    try{\r\n        let dataABI = contract.methods.payNodeTypeFee(nodeTypeNum).encodeABI();\r\n        let txHash = await signTransaction(address, dataABI, _etherAmount);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n} \r\n\r\n// sign transaction using metamask\r\nconst signTransaction = async (address, dataABI, _etherAmount) => {\r\n\r\n    const transactionParameters = {\r\n        to: contractAddress, // Required except during contract publications.\r\n        from: address, // must match user's active address.\r\n        data: dataABI,\r\n        gasLimit: \"0x5208\",\r\n        chainId: 43113,\r\n        value: parseInt(_etherAmount).toString(16),  // this should be hex !!!!\r\n      };\r\n    \r\n    //sign the transaction\r\n    try {\r\n        const txHash = await window.ethereum.request({\r\n          method: \"eth_sendTransaction\",\r\n          params: [transactionParameters],\r\n        });\r\n        return txHash;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  connected: false,\r\n  connection: null,\r\n  address: null,\r\n};\r\n\r\nexport const walletSlice = createSlice({\r\n  name: 'wallet',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    setConnected: (state, action) => {\r\n      state.connected = true;\r\n      state.address = action.payload;\r\n      console.log(\"setConnected\", state.address)\r\n    },\r\n    setConnection: (state, action) => {\r\n      console.log(\"setConnection\", action.payload)\r\n      state.connection = action.payload;\r\n    },\r\n    disconnected: (state) => {\r\n      state.connected = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const connectState = (state) => state.wallet.connected;\r\n\r\nexport const connectedAddress = (state) => state.wallet.address;\r\n\r\nexport const getConnection = (state) => state.wallet.connection;\r\n\r\nexport const { setConnected, setConnection, disconnected } = walletSlice.actions;\r\n\r\nexport default walletSlice.reducer;\r\n","import React from 'react';\r\nimport { render } from '@testing-library/react';\r\nimport { Provider } from 'react-redux';\r\n// import { store } from './app/store';\r\nimport App from './App';\r\n\r\ntest('renders learn react link', () => {\r\n  const { getByText } = render(\r\n    <Provider >\r\n      <App />\r\n    </Provider>\r\n  );\r\n\r\n  expect(getByText(/learn/i)).toBeInTheDocument();\r\n});\r\n","import { NFTAbi } from 'constants/nftAbi';\r\nimport { nftAddress } from '../constants/config';\r\nimport { getContract } from './contract';\r\n\r\nconst nftContract = getContract(NFTAbi, nftAddress);\r\n\r\nexport const getMarketItems = async () => {\r\n    let items = await nftContract.methods.getUnsoldItems().call();\r\n    return items;\r\n}\r\n\r\nexport const getBoostsOfAccount = async (wallet) => {\r\n    let boosts = await nftContract.methods.getBoostsOfAccount(wallet).call();\r\n    return boosts;\r\n}\r\n\r\nexport const getTokenUriById = async (id) => {\r\n    let uri = await nftContract.methods.tokenURI(id).call();\r\n    return uri;\r\n}\r\n\r\nexport const getIdsOfAccount = async (account) => {\r\n    let ids = await nftContract.methods.getIdsOfAddress(account).call();\r\n    return ids;\r\n}\r\n\r\nexport const getCurrentID = async () => {\r\n    let currentID = await nftContract.methods.getCurrentTokenID().call();\r\n    return currentID;\r\n}\r\n\r\nexport const buyNFT = async (wallet, id) => {\r\n    try{\r\n        let dataABI = nftContract.methods.buyNFT(id).encodeABI();\r\n        let txHash = await signTransactionNFT(wallet, dataABI);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const sellNFT = async (wallet, id) => {\r\n    try{\r\n        let dataABI = nftContract.methods.sellNFT(id).encodeABI();\r\n        let txHash = await signTransactionNFT(wallet, dataABI);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const mintNFT = async (wallet, metaDataUri, price, nodeType, boost) => {\r\n    try{\r\n        let dataABI = nftContract.methods.mintNFT(metaDataUri, price, nodeType, boost).encodeABI();\r\n        let txHash = await signTransactionNFT(wallet, dataABI);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\nconst signTransactionNFT = async (address, dataABI) => {\r\n    const transactionParameters = {\r\n        to: nftAddress, // Required except during contract publications.\r\n        from: address, // must match user's active address.\r\n        data: dataABI,\r\n        // gasLimit: \"0x5208\",\r\n        // chainId: 43113,\r\n        // value: 0,\r\n      };\r\n    \r\n    //sign the transaction\r\n    try {\r\n        const txHash = await window.ethereum.request({\r\n          method: \"eth_sendTransaction\",\r\n          params: [transactionParameters],\r\n        });\r\n        return txHash;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","export const RewardManagerABI = [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"_cashoutAllNodesReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_creationTime\",\"type\":\"uint256\"}],\"name\":\"_cashoutNodeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"}],\"name\":\"_cashoutNodeTypeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTime\",\"type\":\"uint256\"}],\"name\":\"_changeClaimTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"_getNodeNumberOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"_getNodesCreationTime\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"_getNodesInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"_getNodesLastClaimTime\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"_getRewardAmountOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_creationTime\",\"type\":\"uint256\"}],\"name\":\"_getRewardAmountOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"_isNodeOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nodePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"}],\"name\":\"addNewNodeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nodePrice\",\"type\":\"uint256\"}],\"name\":\"changeNodePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"}],\"name\":\"changeNodeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nodePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"}],\"name\":\"changeNodeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nodeType\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"nodeName\",\"type\":\"string\"}],\"name\":\"createNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gateKeeper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"}],\"name\":\"getNodeType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nodePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewardReleased\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nodeTypes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nodePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewardReleased\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"}],\"name\":\"removeNodeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalNodesCreated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"types\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n","// jest-dom adds custom jest matchers for asserting on DOM nodes.\r\n// allows you to do things like:\r\n// expect(element).toHaveTextContent(/react/i)\r\n// learn more: https://github.com/testing-library/jest-dom\r\nimport '@testing-library/jest-dom/extend-expect';\r\n","// import Web3 from 'web3';\r\n// import { rpcUrl } from \"../constants/config\";\r\nimport { payDeadline } from \"constants/config\";\r\n\r\n// estimate current block time stamp from browser time \r\n// it doesn't match exactly so it can cause reward amount is less than 0\r\nexport const getTimestamp = () => {\r\n    // var web3 = new Web3(new Web3.providers.HttpProvider(rpcUrl));\r\n    // var blockNumber =await web3.eth.getBlockNumber();\r\n    // var block = await web3.eth.getBlock(blockNumber);\r\n    let browserTimestamp = Math.floor(Date.now() / 1000);\r\n    // console.log(block[\"timestamp\"] - browserTimestamp, \"difference\");\r\n    return browserTimestamp + 130;\r\n}\r\nexport const calDateFromSeconds = (duration) => {\r\n    duration = parseInt(duration);\r\n    if (duration <= 0) return \"-\";\r\n    else if (duration < 3600) {\r\n        return (Math.floor(duration/60) + \"mins \" + duration%60 + \"seconds\");\r\n    } else if (duration < 86400) {\r\n        return (Math.floor(duration/3600) + \"hours \" + Math.floor((duration%3600)/60) + \"mins\");\r\n    } else {\r\n        return (Math.floor(duration/86400) + \"days \" + Math.floor((duration%86400)/3600) + \"hours\");\r\n    }\r\n}\r\n\r\nexport const checkPayable = (node) => {\r\n    let leftTime = calDateFromSeconds(node.paidTime - getTimestamp());\r\n    if (leftTime!=\"-\"&&parseInt(node.paidTime) - getTimestamp()<payDeadline) return true;\r\n    return false;\r\n}\r\n\r\nexport const checkClaimable = (node) => {\r\n    let leftTime = calDateFromSeconds(node.paidTime - getTimestamp());\r\n    return leftTime!=\"-\";\r\n}","var map = {\n\t\"./\": 120,\n\t\"./App\": 95,\n\t\"./App.css\": 240,\n\t\"./App.js\": 95,\n\t\"./App.test\": 241,\n\t\"./App.test.js\": 241,\n\t\"./app/reducers/walletSlice\": 21,\n\t\"./app/reducers/walletSlice.js\": 21,\n\t\"./app/store\": 158,\n\t\"./app/store.js\": 158,\n\t\"./assets/img/freya.b02dd9d0.png\": 704,\n\t\"./assets/styles/bootstrap.min.css\": 284,\n\t\"./assets/styles/index.css\": 705,\n\t\"./assets/styles/tailwind.css\": 706,\n\t\"./components/AnalyticBoard\": 159,\n\t\"./components/AnalyticBoard.js\": 159,\n\t\"./components/Headers/ConnectButton\": 161,\n\t\"./components/Headers/ConnectButton.js\": 161,\n\t\"./components/Headers/Header\": 162,\n\t\"./components/Headers/Header.js\": 162,\n\t\"./components/Input\": 163,\n\t\"./components/Input.js\": 163,\n\t\"./components/NodeComponent\": 157,\n\t\"./components/NodeComponent.js\": 157,\n\t\"./constants/config\": 18,\n\t\"./constants/config.js\": 18,\n\t\"./constants/marvel\": 160,\n\t\"./constants/marvel.js\": 160,\n\t\"./constants/nftAbi\": 164,\n\t\"./constants/nftAbi.js\": 164,\n\t\"./constants/rewardManager\": 375,\n\t\"./constants/rewardManager.js\": 375,\n\t\"./index\": 120,\n\t\"./index.css\": 238,\n\t\"./index.js\": 120,\n\t\"./layouts/MainLayout\": 155,\n\t\"./layouts/MainLayout.js\": 155,\n\t\"./logo.svg\": 995,\n\t\"./pages/MainPage\": 156,\n\t\"./pages/MainPage.js\": 156,\n\t\"./pages/MintNFTPage\": 165,\n\t\"./pages/MintNFTPage.js\": 165,\n\t\"./pages/NFTMarketplacePage\": 166,\n\t\"./pages/NFTMarketplacePage.js\": 166,\n\t\"./serviceWorker\": 167,\n\t\"./serviceWorker.js\": 167,\n\t\"./setupTests\": 384,\n\t\"./setupTests.js\": 384,\n\t\"./utils/contract\": 19,\n\t\"./utils/contract.js\": 19,\n\t\"./utils/nftContract\": 31,\n\t\"./utils/nftContract.js\": 31,\n\t\"./utils/uploader\": 97,\n\t\"./utils/uploader.js\": 97,\n\t\"./utils/util\": 41,\n\t\"./utils/util.js\": 41\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 427;","export default __webpack_public_path__ + \"static/media/freya.b02dd9d0.b02dd9d0.png\";","import React from 'react';\r\nimport {Route, Switch, Redirect} from \"react-router-dom\";\r\nimport MainLayout from 'layouts/MainLayout.js';\r\nimport './App.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n        {/* add routes with layouts */}\r\n        <Route path=\"/\" component={MainLayout}/>\r\n        <Redirect from=\"*\" to=\"/\"/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import axios from 'axios';\r\nimport FormData from 'form-data';\r\nimport { pinataApiKey, pinataSecretApiKey } from 'constants/config';\r\n\r\nexport const uploadToIPFS = async (file) => {\r\n    try {\r\n\r\n        var fd = new FormData();\r\n        fd.append(\"file\", file);\r\n        const metadata = JSON.stringify({\r\n            name: file.fileName,\r\n            keyvalues: {\r\n            }\r\n        });\r\n        fd.append('pinataMetadata', metadata);\r\n    \r\n        const pinataOptions = JSON.stringify({\r\n            cidVersion: 0\r\n        });\r\n        fd.append('pinataOptions', pinataOptions);\r\n    \r\n        let response = await axios.post(\"https://api.pinata.cloud/pinning/pinFileToIPFS\", fd, {\r\n            maxBodyLength: 'Infinity', //this is needed to prevent axios from erroring out with large files\r\n            headers: {\r\n                'Content-Type': `multipart/form-data; boundary=${fd._boundary}`,\r\n                pinata_api_key: pinataApiKey,\r\n                pinata_secret_api_key: pinataSecretApiKey\r\n            }\r\n        });\r\n        return response;\r\n    } catch (error) {\r\n        console.log(\"Uploading Error\", error);\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport const uploadJson = async (data, jsonName)=>{\r\n    let dataStr = JSON.stringify(data);\r\n    let file = new File([dataStr], jsonName+\".json\", {type: \"text/plain\"});\r\n\r\n    return await uploadToIPFS(file);\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.db36153e.svg\";"],"sourceRoot":""}